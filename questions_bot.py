import telebot
from telebot import types

# Создание экземпляра бота с токеном вашего бота
bot = telebot.TeleBot('5875356098:AAHjGOX-SgugwWwtl7YuID9Xe1b2t9VTkzU')

# Обработчик команды /start
@bot.message_handler(commands=['start'])
def start(message):
    """Отправляет приветственное сообщение и клавиатуру с вопросами"""
    bot.send_message(message.chat.id, 'Привет! Я бот, готовый ответить на твои вопросы по QA.')
    show_question_keyboard(message.chat.id)

# Обработчик выбора вопроса из клавиатуры
@bot.callback_query_handler(func=lambda call: True)
def handle_question_choice(call):
    question_id = call.data
    answer = get_answer_by_question_id(question_id)
    bot.send_message(call.message.chat.id, answer)

# Функция для отображения клавиатуры с вопросами
def show_question_keyboard(chat_id):
    markup = types.InlineKeyboardMarkup()
    questions = [
        "Что такое тестирование Чёрного ящика?",
        "Что такое тестирование Белого ящика?",
        "Что такое тестирование End-to-End"]

    for i, question in enumerate(questions):
        button = types.InlineKeyboardButton(text=question, callback_data=str(i))
        markup.add(button)

    bot.send_message(chat_id, "Выбери вопрос:", reply_markup=markup)

# Функция для получения ответа по идентификатору вопроса
def get_answer_by_question_id(question_id):
    answers = [
        'Тестирование чёрного ящика или поведенческое тестирование — это стратегия (метод) тестирования функционального поведения ПО с точки зрения внешнего мира, при котором не используется знание о внутреннем устройстве тестируемого объекта. Под стратегией понимаются систематические методы отбора и создания тестов для тестового набора. Стратегия поведенческого теста исходит из технических требований и их спецификаций\nНекоторые приёмы тестирования чёрного ящика:\n• эквивалентное разбиение;\n• анализ граничных значений;\n• анализ причинно-следственных связей;\n• предположение об ошибке;',
        'Белый ящик — это тестирование кода на предмет логики работы программы и корректности её работы с точки зрения компилятора того языка, на котором она писалась.\nТехника тестирования по принципу Белого ящика, также называемая техникой тестирования, управляемой логикой программы, позволяет проверить внутреннюю структуру программы. Исходя из этой стратегии тестировщик получает тестовые данные путем анализа логики работы программы.\nТехника Белого ящика включает в себя следующие методы тестирования:\n•покрытие решений;\n•покрытие условий;\n•покрытие решений и условий;\n•комбинаторное покрытие условий;',
        'End-to-end тестирование — это тип тестирования где тестировщик использует ПО (сценарии, которые исследуют весь поток выполнения) в условиях которыми вероятней всего обладает пользователь. \nВ дополнение, тесты будут работать сочетая в себе несколько сценариев уместных в реальном мире:\n•	запуск ПО в среде с задержками связи сети;\n•	запуск ПО в среде с низкими ресурсами;\n•	Запуск ПО на другом серверном оборудовании;\n•	Запустите ПО в той же среде, что имеет некоторые другие приложения, которые потребляют ресурсы сервера.'
    ]
    return answers[int(question_id)]

# Запуск бота
bot.polling()
